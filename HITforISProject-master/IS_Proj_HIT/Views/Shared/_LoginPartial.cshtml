@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">

@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("HIT Faculty") || User.IsInRole("Nursing Faculty") || User.IsInRole("Administrator"))
    {
    <li class="nav-item">
        <a class="nav-link" asp-controller="Administration" asp-action="ListRoles">Administration</a>
    </li>
        }
    <li class="nav-item">
        <a class="nav-link" asp-controller="Administration" asp-action="EditRegisterDetails"
            
title="Manage">Hello @User.Identity.Name!</a>
</li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link"><i class="fas fa-sign-out-alt"></i>Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-user-plus"></i>Create user account</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt"></i>Login</a>
    </li>
}
</ul>